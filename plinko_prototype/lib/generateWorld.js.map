{"version":3,"sources":["../src/generateWorld.js"],"names":["bodies","row","ROWS","col","COLS","rowSpace","SPACING","colSpace","peg","Peg","push","i","wall","Wall","CANVAS_HEIGHT","leftWall","rightWall","CANVAS_WIDTH","ground","Ground"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;AACA;;;;AAEA;AACA,IAAMA,SAAS,EAAf;;AAEA;AACA,KAAK,IAAIC,MAAM,CAAf,EAAkBA,MAAMC,YAAxB,EAA8BD,KAA9B,EAAqC;AACnC,OAAK,IAAIE,MAAM,CAAf,EAAkBA,MAAMC,eAAO,CAA/B,EAAkCD,KAAlC,EAAyC;AACvC,QAAIE,WAAWF,MAAMG,eAArB;AACA,QAAIL,MAAM,CAAN,IAAW,CAAf,EAAkB;AAChBI,kBAAYC,kBAAU,CAAtB;AACD;AACD,QAAIC,WAAWD,kBAAUL,MAAMK,eAA/B;AACA,QAAIE,MAAM,IAAIC,aAAJ,CAAQJ,QAAR,EAAkBE,QAAlB,EAA4B,CAA5B,CAAV;AACAP,WAAOU,IAAP,CAAYF,GAAZ;AACD;AACF;;AAED;AACA,KAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAIP,YAApB,EAA0BO,GAA1B,EAA+B;AAC7B,MAAIC,OAAO,IAAIC,UAAJ,CAASP,kBAAUK,CAAnB,EAAsBG,wBAAgB,EAAtC,EAA0C,CAA1C,EAA6C,GAA7C,CAAX;AACAd,SAAOU,IAAP,CAAYE,IAAZ;AACD;;AAED;AACA,IAAMG,WAAW,IAAIF,UAAJ,CAAS,CAAT,EAAYC,wBAAgB,CAA5B,EAA+B,CAA/B,EAAkCA,qBAAlC,CAAjB;AACA,IAAME,YAAY,IAAIH,UAAJ,CAASI,oBAAT,EAAuBH,wBAAgB,CAAvC,EAA0C,CAA1C,EAA6CA,qBAA7C,CAAlB;;AAEAd,OAAOU,IAAP,CAAYK,QAAZ;AACAf,OAAOU,IAAP,CAAYM,SAAZ;;AAEA;AACA,IAAME,SAAS,IAAIC,YAAJ,EAAf;AACAnB,OAAOU,IAAP,CAAYQ,MAAZ;;kBAEelB,M","file":"generateWorld.js","sourcesContent":["import { Bodies, World } from 'matter-js';\nimport Peg from './bodies/Peg';\nimport { Wall, Ground } from './bodies/Wall';\nimport { CANVAS_WIDTH, CANVAS_HEIGHT, SPACING, ROWS, COLS } from './constants/canvas';\n\n// Array to hold bodies to add to world later\nconst bodies = []\n\n// Generate pegs\nfor (var row = 0; row < ROWS; row++) {\n  for (var col = 0; col < COLS + 1; col++) {\n    var rowSpace = col * SPACING;\n    if (row % 2 == 0) {\n      rowSpace += SPACING / 2;\n    }\n    var colSpace = SPACING + row * SPACING;\n    var peg = new Peg(rowSpace, colSpace, 3);\n    bodies.push(peg)\n  }\n}\n\n// Generate bucket walls\nfor (var i = 1; i < COLS; i++) {\n  let wall = new Wall(SPACING * i, CANVAS_HEIGHT - 80, 5, 200);\n  bodies.push(wall)\n}\n\n// Generate left and right walls\nconst leftWall = new Wall(0, CANVAS_HEIGHT / 2, 5, CANVAS_HEIGHT);\nconst rightWall = new Wall(CANVAS_WIDTH, CANVAS_HEIGHT / 2, 5, CANVAS_HEIGHT);\n\nbodies.push(leftWall)\nbodies.push(rightWall)\n\n// Generate ground\nconst ground = new Ground();\nbodies.push(ground)\n\nexport default bodies\n"]}