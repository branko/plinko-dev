{"version":3,"sources":["../src/parallel_engine.js"],"names":["runParallelSimulation","clientFrame","serverFrame","bodies","simulationFrame","engine","Engine","create","World","add","world","backgroundBodies","actualChipBodies","map","chip","body","x","y","Body","setVelocity","linearVelocity","id","update"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;;;AAEA,SAASA,qBAAT,CAA+BC,WAA/B,EAA4CC,WAA5C,EAAyDC,MAAzD,EAAiE;AAC/D,MAAIC,kBAAkBF,WAAtB;;AAEA,MAAIG,SAASC,iBAAOC,MAAP,EAAb;;AAEA;AACAC,kBAAMC,GAAN,CAAUJ,OAAOK,KAAjB,EAAwBC,uBAAxB;;AAEA,MAAIC,mBAAmBT,OAAOU,GAAP,CAAW,gBAAQ;AACxC,QAAIC,OAAO,oBAAaC,KAAKC,CAAlB,EAAqBD,KAAKE,CAA1B,CAAX;AACAC,mBAAKC,WAAL,CAAiBL,KAAKC,IAAtB,EAA4BA,KAAKK,cAAjC;AACAN,SAAKC,IAAL,CAAUM,EAAV,GAAeN,KAAKM,EAApB;AACA,WAAOP,KAAKC,IAAZ;AACD,GALsB,CAAvB;;AAOAP,kBAAMC,GAAN,CAAUJ,OAAOK,KAAjB,EAAwBE,gBAAxB;;AAEA;AACA;AACA,SAAOR,kBAAkBH,WAAzB,EAAsC;AACpCK,qBAAOgB,MAAP,CAAcjB,MAAd,EAAsB,OAAO,EAA7B;AACAD;AACD;;AAGD;AACA,SAAOQ,gBAAP;AACD;;kBAEcZ,qB","file":"parallel_engine.js","sourcesContent":["import { Engine, Events, World, Composite, Body } from 'matter-js';\nimport backgroundBodies from './generateWorld'\nimport generateChip from './bodies/Chip'\n\nfunction runParallelSimulation(clientFrame, serverFrame, bodies) {\n  let simulationFrame = serverFrame\n\n  var engine = Engine.create();\n\n  // add all of the bodies to the world\n  World.add(engine.world, backgroundBodies);\n\n  let actualChipBodies = bodies.map(body => {\n    let chip = generateChip(body.x, body.y)\n    Body.setVelocity(chip.body, body.linearVelocity)\n    chip.body.id = body.id\n    return chip.body\n  })\n\n  World.add(engine.world, actualChipBodies);\n\n  // Server frame needs to catch up to client frame\n  // (server is in the past)\n  while (simulationFrame < clientFrame) {\n    Engine.update(engine, 1000 / 60)\n    simulationFrame++\n  }\n\n\n  // let simulatedWorld = Composite.allBodies(engine.world)\n  return actualChipBodies\n}\n\nexport default runParallelSimulation\n"]}